package com.ohgiraffers.section02.extend;

public class WildCardFarm {

    /* RabbitFarm<> */
    public void anyType(RabbitFarm<?> farm) {
        farm.getAnimal().cry();
    }

    /* 토끼농장의 토끼가 Bunny 이거나 그의 후손 타입으로 만들어진 토끼
     *   농장만 매개변수로 사용 가능
     *  */
    public void extendsType(RabbitFarm<? extends Bunny> farm) {
        farm.getAnimal().cry();
    }

    public void superType(RabbitFarm<? super Bunny> farm) {
        farm.getAnimal().cry();
    }
}

// 여러개의 다양한 데이터 다양한 자료형을 쉽고 효과적으로 처리할 수 있도록 처리 
// 자료구조 : 단순구조는 변수 , 선형구조(하나의 일직선상의 값들을 저장) , 비선형구조 , 파일구조
// 배열이란 ㅁㅁㅁㅁㅁ 인덱스번호체계 0 1 2 3 4 가 되어있었어요 이중연결리스트는 배열이랑 똑같이 방이 있는데 얘네는 쪼금식 떨어져있어요
// 각자의 공간끼리 참조하는 구조 서로서로 바라보는 ㅁ->ㅁ->ㅁ->ㅁ->ㅁ 서로의 주소를 알아요
// 이중연결리스트는 떨어져서 더욱 장점이 많아요. 서로 위치를 바꿀 때 주소만 바꾸면됩니다. 배열은 인덱스로 고정 , 이중연결리스트는 주소를 참조하기에
// 3번이 5번이 1번이 될 수 있는 sort 이 편해져요.
// 리스트는 배열의 단점을 극복하기 위해 나온 것 , set 은 순서가 없어요 규칙이 없어요 네모난 상자에 아무거나 집어넣는데 지정한 번호를 몰라요. 저장순서가 유지되지 않음
// 네모난 랜덤상자에다가 값을 집어넣는 것 , 중복된 값도 넣을 수가 없다 ,1~45까지 정수저장하는데 중복된 값이 나오지 않도록 보장
// map 같은 경우에는 값을 저장할때 x=10 이라고 저장하면 x 기준으로 10이 있다는 것이잖아요 랜덤박스에다가 값을 집어넣을 건데 값에 대한 꺼내올 키값을 지정해주는 것이에요
// 새우깡을 지정할때 과자라는 키값을 새우깡에 저장 ,, 수학공식할때 3.14를 파이라는 변수에 담아서 해당 밸류를 쓰는데 맵도 마찬가지 키값과 같이 저장을 해요
// 랜덤박스에다가 값을 다 넣는데 값을 맵에다 다때려박고 .을 박고 해당 변수나 메서드를 꺼냈잖아요 맵도 마찬가지로 ... 으로 남용할 수도 있어요
